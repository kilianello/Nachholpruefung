<!DOCTYPE html>
<html>
    <head>                                  
        <title>Fang den Maulwurf</title>    
        <style>
            #Spielbrett {                   /*Layout vom Spielbrett*/
                width: 400px;
                height: 200px;
                border: 1px solid black;
                position: relative;         /*Block rutscht nach unten wg. Herzen*/
            }
            #Loch {                         /*Style der Löcher*/
                width: 50px;
                height: 50px;
                background-color: brown;
                border: 1px solid black;
                position: absolute;         /*Loch hat festen Platz in der Box*/
                display: flex;              /*flexbox xy*/
                justify-content: center;    /*zentriert Inhalt horizontal*/
                align-items: center;        /*zentriert Inhalt vertikal*/
                cursor: pointer;            /*ändert Cursor bei Hover-Effekt*/
            }
            #Herzen {
                position: absolute;
                top: 50px;
                left: 50px;
                font-size: 28px;
            }
        </style>
    </head>
    <body> 
        <div id="Spielbrett">               
            <div class="Loch"></div>        
            <div class="Loch"></div>        
            <div class="Loch"></div> 
            <div class="Loch"></div> 
            <div class="Loch"></div> 
            <div class="Loch"></div> 
            <div class="Loch"></div> 
        </div>
        <div id="Herzen">
            ♥ ♥ ♥                                               
        </div>
        <div id="Punktestand">Highscore: 0</div>                
        <button id="start-button">Neues Spiel starten</button>  

        <script> // enthält JavaScript-Code
            // Anzahl Leben / Highscore
            let Leben = 3; /* Variable für die Leben */
            let Punkte = 0; /* Variable für die Punkte */
            
            //Document Object Model Elemente, Konstanten
            const Löcher = Array.from(document.getElementsByClassName('Loch'));
            const Herzen = document.getElementByID('Herzen');
            const PunktestandAnzeige = document.getElementById('Punktestand');
            const startButton = document.getElementById('start-button');

            //Highscore im LS anzeigen
            const gespeicherterPunktestand = localStorage.getItem('Punktestand'): //Methode vom LocalStorage
            let Highscore = gespeicherterPunktestand ? parseInt(gespeicherterPunktestand) : 0; //setzt Highscore auf 0, Funktion für 0 oder Ganzzahl
            if (gespeicherterPunktestand) {
                console.log('Dein Highscore in diesem Spiel ist: ' + Highscore);
            }

            function aktualisiereLebenAnzeige() {
                Herzen.textContent = '♥'.repeat(Leben);
            }

            function aktualisierePunktestandAnzeige() {
                PunktestandAnzeige.textContent = 'Highscore: ' + Punkte;
            }

            function starteSpiel() {
                Punkte = 0;
                Leben = 3
                aktualisiereLebenAnzeige();
                aktualisierePunktestandAnzeige();
                startButton.disabled = true;
                startButton.textContent = 'Spiel läuft...';
            }

            function zeigeMaulwurf() {
                const zufälligesLochIndex = Math.floor(Math.random() * Löcher.length) //zufällige Zahl 0-1, gibt die Anzahl der Elemente im Löcher-Array
                const ausgewähltesLoch = Löcher[zufälligesLochIndex]                  // speichern des Lochs
                ausgewähltesLoch.classList.add('aktiv');                              //Klassifiziert Loch als aktiv 

                const versteckenTimeout = setTimeout(() => {
                    ausgewähltesLoch.classList.remove('aktiv');
                if (startButton.disabled) return;                                     //Beendet die Funktion, wenn das Spiel vorher beendet wurde
                if (Leben > 0) {
                  zeigeMaulwurf();                                                    // Ruft die Funktion zum Anzeigen des Maulwurfs erneut auf
                } else {                                                              
                    beendeSpiel();                                                    // Beendet Spiel wenn keine Leben übrig sind
                }
            }, Math.random() * 800 + 200);                           // zufällige Zeit zwischen 0,2 und 1

            ausgewähltesLoch.addEventListener('click', () => {
                if (ausgewähltesLoch.classList.contains('aktiv')) return; //prüfen ob ausgewähltes Loch aktiv ist
                clearTimeout(versteckenTimeout); // Löscht den Timer, um das Verstecken des Maulwurfs zu stoppen
                    ausgewähltesLoch.classList.remove('aktiv');     //entfernt Klasse aktiv vom Loch
                Punkte += 5; //Erhöht Punktzahl um 5
                aktualisierePunktestandAnzeige();
            });
        }

        let countdown = 3;
        const countdownInterval = setInterval(() => {
            if (countdown > 0) {
                console.log(countdown); //gibt Countdown-Wert aus
            }
    </script>
    </body>
</html>